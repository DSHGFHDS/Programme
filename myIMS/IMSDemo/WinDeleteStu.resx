<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAMDAAAAEAIACoJQAAFgAAACgAAAAwAAAAYAAAAAEAIAAAAAAAACQAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAvMjUAMHO2gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAl7EENI62qzWkzbWHtLwGAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA+hZVKF6Xk/xKx
        8/82jZxMAAAAAAAAAAAAAAAAAAAAAAAAAABIbnwaNHaJXmSKlQoAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABvjJgIS4+vbE6YtUwAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AABViKVGGKHt/xax+v9ZjKpIAAAAAAAAAAAAAAAAAAAAAKOztQI7kcLVGMP0/0Kn1r8AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABcgZVMJ6ro/yOx7P1IlrRaAAAAAAAA
        AAAAAAAAAAAAAAAAAABpjqUUH5bX9Ryr9P95or82AAAAAAAAAAAAAAAAAAAAAHGSmjoxqe//DrP2/zC0
        4csAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABrjaEUMZ7W7Qas
        +v8qp9zXz9jmAAAAAAAAAAAAAAAAAAAAAADK3+YAIJPHwyWu7v9zk60aAAAAAAAAAAAAAAAAAAAAAHKc
        r3gRp/X/EbD0/0ao2XYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAU520dB+v8f8crOr/U5e1LgAAAAAAAAAAAAAAAAAAAAAAAAAAKIK1WjGp2uvLy8sCAAAAAAAA
        AAAAAAAAAAAAAFuexX4Qpvf/Oanl53ijpw4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAg6G4BEObwK0ZqvL/UprBdgAAAAAAAAAAAAAAAAAAAAAAAAAAXKDADFmM
        nnIAAAAAAAAAAAAAAAAAAAAAAAAAAFalyX4ZrfH/UJjMcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANDQ
        0ABeeIggprPAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGOIlww9ncezP4u7oQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAI2WmAIAAAAAAAAAAAAAAAAAAAAAAAAAAEahwoMvns3fa56wDAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAGxxcBY/dINIo83UBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAC+LtschrOv/MqDY30yTtUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACWpq4Ea4eXPNXf
        3wB1hpUSQXGVOC1rm14tgaN+J3qgiSR0nIcnY4xePGyGMm1/gQYAAAAAAAAAAG+OpXJTiJZEAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAT36ZSC+Cse0kruH/NIugVAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAEWNsJcUqfH/Bqn5/x2j5vVQlbVCAAAAAAAAAAAAAAAAAAAAAAAA
        AACqws4AQGuLOjWJtcUenM/1GKfk/w+u9v8Ttfn/Da71/w2s9v8Rou3/IJnX/SWLv+swfLCVOWyORnOH
        khwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA4cI0sI4/G7xC19/8isuf7RIymOgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJebtQJHjLl6IZjj+RCY9v8qnt/vaZWzLgAA
        AAAAAAAAAAAAAHJycgpKeqCdJZDT+wum9v8Gqvn/Bqv8/waq/f8GrPr/Ban6/wWo/P8Dpvv/BLD8/wiv
        9/8Nrvj/F6Tg/yWFutlCeI1gt8XLAgAAAAAAAAAAAAAAAAAAAAAkfKnLC57y/y2k4PtLlbRqxNTiAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAa5erJlKd
        y4sjjdTfM5nK4WWIng4AAAAATGmGKEKNu9UdpPL/BaP6/wOi+v8Clvj/A5j5/wSb+/8Fmvz/BJj7/wSY
        +/8Gn/j/BqL4/wWn+/8Ip/r/Bab6/wSn+/8Wn+T/N4WrtV1/lBIAAAAAAAAAAEt9izIXkdX/L5bK03OZ
        syQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAABVmK0MUIidSl9ufSZVe5sgMY3E3w2h8/8FoPn/Ap75/wSa+v8Em/r/Bp38/wif
        /f8El/z/AZL6/wOV+/8Ejvv/BpT8/wWX/P8Dmfv/BqH8/wWm+f8Ipvn/Fqv0/zqPudFWe5IiAAAAAE17
        k2wngLB+V4qoDAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHV+iQo0isHZDJ34/wyd+f8Cn/v/B6T5/wed
        9/8Dmvv/BJr7/wSZ+v8Dlvn/BZf5/wSZ+/8Glfv/A5b6/wOZ+P8Dlvr/A5r8/wCZ+/8Hpfn/Cqn6/xKx
        9f88lcDjY32LIMXO2QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADB+r50Iovf/BaD7/wGa
        +/8Cnfv/BKH8/win/f8FpPv/BZv7/wWZ+v8IlPr/BpX4/wuf+/8HnPr/Cpn4/wie+v8CnPr/BJ/8/wSf
        +/8Dm/r/Apj7/wii+/8XrfT/So65z2B4hw4AAAAAAAAAAAAAAAAAAAAA1NzcAEhvhSgtcI+DMHmXdmic
        rgYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWYOgICKU
        2/UCovr/A5/8/wGV+v8Blfr/BJv7/wOb+f8Dm/r/A5X7/web+v8IoPr/CZn4/wiV+f8Gmfv/BKD5/wun
        +f8FoPz/BaD7/wOg/P8Dmfr/A5r5/weg/P8FmPr/MKjo/0Fwi4sAAAAAAAAAAAAAAABTgpEMJnidmR+R
        0/kRq/D/Iqnk/02QrSoAAAAAAAAAAAAAAAAAAAAAapCpJkOl07lIqdq/VqTIm2iQrEi+vr4CAAAAAAAA
        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
        9/8wqtnlxdzkAgAAAAAAAAAAAAAAAAAAAACHjZ0SZoypVlGVwH46jsShKI7BuVSGqaOJjIoIO4exsQ2m
        9v8IoPv/BZn7/wWW/P8Dl/n/BpD4/xKH6v8HjfT/BpD5/wWR+P8Wc9L/CI34/wSK9/8Jfen/Dozy/waY
        +P8Jm/j/FIfm/wmj+f8Ho/n/BJ/7/wai+P8Ip/n/Cav7/wmu+/8TrfT/M2mKpQAAAADb8f0AhK+6BkuN
        qi48k7lSV6LFflyozYFJlbM+AAAAAAAAAAAAAAAAUXWEBlaiyaUupOb9Eqf3/wqY+P8PofT/H5PS706I
        rFAAAAAASG2DUCOb3v8Gn/j/BZ/5/wWY/v8Dlf3/B5X6/xuM5v8dXK3/E47w/xiD5v8ZV67/B5T3/wSZ
        +/8Pkuv/GF69/xmY9v8ciOD/E3fG/wak+/8Eo/f/BZ75/wmh+f8JqPv/B6n5/wiq+v8omtb9RWR2RAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAVHmDFD6cze0SofL/DqDz/ymi
        5f0xjL+rTXmgHgAAAAAAAAAAdIyZBjN8pNMRp/j/Cpr7/wad+/8Ckfr/A5n6/wqd+P8UkeH/E1+4/xJt
        xP8Um/L/BqX8/wui+v8Jovr/EJTj/xJ4zf8UidP/Eqj5/wyt9/8IpPj/AZP2/weW+/8FlPr/BqD7/w2v
        9v84fqfPlay6AgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEl3
        kh46faZeLXqidFSKqS7W4ugAAAAAAAAAAAAAAAAAAAAAAFRvhEoom8//BaD8/wqd+P8ClPr/BZn2/wWY
        +v8Nofz/Car4/w2V+/8Hkvv/BZz8/wae+v8Ip/v/Can6/wWh+v8KrP3/DbH4/wqg+f8EmPr/A5H7/wKP
        9P8Fjvv/A6X8/yKNyP1DZH1GAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAybYufH6Ds/waf
        +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
        AADAxtkCMpjU2QWf/P8Onvf/KnKiZAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAOaTUuwin/P8KqPX/NI22kwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAASp25dBaw8v8Qr/b/O42xlwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAeqK8Bj2jx5lDqc3VTHyUOAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD///////8AAP///P///wAA///8////
        AAD///z8f/8AAP/5/Px//wAA//j8/P//AAD//P78//8AAP/8//3//wAA//5/+f//AAD4//z//P8AAPh/
        gA/4/wAA/j4AA/H/AAD/HAAA8/8AAP/4AAB//wAA//AAAD//AAD/4AAAH98AAP/gAAAPDwAAx8AAAA4P
        AADAwAAABD8AAOHAAAAH/wAA/8AAAAf/AAD/wAAAB/8AAP/AAAAD/wAA/8AAAAP/AAD/wAAAAwMAAP/A
        AAACAwAA/EAAAAP3AADA4AAAB/8AAMHgAAAH/wAA//AAAA//AAD/8AAAD/8AAP/4AAAf/wAA/8wAADD/
        AAD/HgAAeD8AAP4/AAD8PwAA/D/AA/8/AAD8/3gP//8AAP/+f/5//wAA//z//z//AAD/+P7/H/8AAP/x
        /n+P/wAA//H8f5//AAD/8/x///8AAP///H///wAA///8P///AAD///4///8AAP///n///wAA////////
        AAA=
</value>
  </data>
</root>